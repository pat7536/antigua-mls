'use client';

import { useUser } from '@clerk/nextjs';
import { useSavedProperties } from '@/contexts/SavedPropertiesContext';
import Link from 'next/link';

export default function DashboardHome() {
  const { user } = useUser();
  const { savedProperties } = useSavedProperties();

  // Calculate dynamic stats
  const totalSaved = savedProperties.length;
  const avgPrice = savedProperties.length > 0 
    ? savedProperties.reduce((sum, prop) => sum + (prop.fields.Price || 0), 0) / savedProperties.length
    : 0;

  const stats = [
    { 
      name: 'Saved Properties', 
      value: totalSaved.toString(), 
      icon: (
        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{ width: '20px', height: '20px' }}>
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z" />
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 5a2 2 0 012-2h4a2 2 0 012 2v14l-4-2-4 2V5z" />
        </svg>
      ),
      color: 'blue',
      change: '+2 this week'
    },
    { 
      name: 'Avg. Property Price', 
      value: avgPrice > 0 ? `$${Math.round(avgPrice / 1000)}K` : '$0', 
      icon: (
        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{ width: '20px', height: '20px' }}>
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" />
        </svg>
      ),
      color: 'green',
      change: savedProperties.length > 0 ? 'Based on saved' : 'No data'
    },
    { 
      name: 'Property Views', 
      value: '247', 
      icon: (
        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{ width: '20px', height: '20px' }}>
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
        </svg>
      ),
      color: 'purple',
      change: '+15 today'
    },
    { 
      name: 'Active Alerts', 
      value: '3', 
      icon: (
        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{ width: '20px', height: '20px' }}>
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 17h5l-5 5v-5zM9 17H4l5 5v-5z" />
        </svg>
      ),
      color: 'orange',
      change: '2 new matches'
    },
  ];

  const getColorClasses = (color: string) => {
    const colors = {
      blue: 'from-blue-500 to-blue-600',
      green: 'from-green-500 to-green-600',
      purple: 'from-purple-500 to-purple-600',
      orange: 'from-orange-500 to-orange-600',
    };
    return colors[color as keyof typeof colors] || colors.blue;
  };

  const recentSavedProperties = savedProperties.slice(-3);

  return (
    <div>
      {/* Header */}
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">
          Welcome back, {user?.firstName || 'Agent'}!
        </h1>
        <p className="text-gray-600">
          Here's your property portfolio overview
        </p>
      </div>

      {/* Stats Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6 mb-8">
        {stats.map((stat) => (
          <div
            key={stat.name}
            className="bg-white rounded-xl shadow-sm border border-gray-100 p-5 hover:shadow-md transition-all duration-200 hover:-translate-y-1"
          >
            <div className="flex items-center justify-between mb-4">
              <div className={`w-12 h-12 bg-gradient-to-r ${getColorClasses(stat.color)} rounded-lg flex items-center justify-center text-white shadow-lg`}>
                {stat.icon}
              </div>
            </div>
            <div>
              <p className="text-sm font-medium text-gray-600 mb-1">{stat.name}</p>
              <p className="text-2xl font-bold text-gray-900 mb-1">{stat.value}</p>
              <p className="text-xs text-gray-500">{stat.change}</p>
            </div>
          </div>
        ))}
      </div>

      {/* Main Content Grid */}
      <div className="grid grid-cols-1 xl:grid-cols-3 gap-8">
        {/* Quick Actions */}
        <div className="xl:col-span-2">
          <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
            <h3 className="text-xl font-semibold text-gray-900 mb-6 flex items-center">
              <svg width="18" height="18" className="mr-2 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{ width: '18px', height: '18px' }}>
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
              </svg>
              Quick Actions
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <Link 
                href="/"
                className="group p-4 rounded-lg bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-100 hover:from-blue-100 hover:to-indigo-100 transition-all duration-200"
              >
                <div className="flex items-center justify-between mb-2">
                  <h4 className="font-semibold text-blue-900 group-hover:text-blue-800">Browse Properties</h4>
                  <svg className="w-5 h-5 text-blue-600 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 8l4 4m0 0l-4 4m4-4H3" />
                  </svg>
                </div>
                <p className="text-sm text-blue-700">Discover new listings and opportunities</p>
              </Link>

              <Link 
                href="/dashboard/saved-properties"
                className="group p-4 rounded-lg bg-gradient-to-r from-green-50 to-emerald-50 border border-green-100 hover:from-green-100 hover:to-emerald-100 transition-all duration-200"
              >
                <div className="flex items-center justify-between mb-2">
                  <h4 className="font-semibold text-green-900 group-hover:text-green-800">Saved Properties</h4>
                  <svg className="w-5 h-5 text-green-600 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 8l4 4m0 0l-4 4m4-4H3" />
                  </svg>
                </div>
                <p className="text-sm text-green-700">Review your bookmarked listings ({totalSaved})</p>
              </Link>

              <Link 
                href="/dashboard/market-data"
                className="group p-4 rounded-lg bg-gradient-to-r from-purple-50 to-violet-50 border border-purple-100 hover:from-purple-100 hover:to-violet-100 transition-all duration-200"
              >
                <div className="flex items-center justify-between mb-2">
                  <h4 className="font-semibold text-purple-900 group-hover:text-purple-800">Market Analytics</h4>
                  <svg className="w-5 h-5 text-purple-600 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 8l4 4m0 0l-4 4m4-4H3" />
                  </svg>
                </div>
                <p className="text-sm text-purple-700">View market trends and insights</p>
              </Link>

              <div className="group p-4 rounded-lg bg-gradient-to-r from-orange-50 to-amber-50 border border-orange-100 hover:from-orange-100 hover:to-amber-100 transition-all duration-200 cursor-pointer">
                <div className="flex items-center justify-between mb-2">
                  <h4 className="font-semibold text-orange-900 group-hover:text-orange-800">Set Alerts</h4>
                  <svg className="w-5 h-5 text-orange-600 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 17h5l-5 5v-5zM9 17H4l5 5v-5z" />
                  </svg>
                </div>
                <p className="text-sm text-orange-700">Get notified about new listings</p>
              </div>
            </div>
          </div>
        </div>

        {/* Recent Saved Properties */}
        <div>
          <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
            <div className="flex items-center justify-between mb-6">
              <h3 className="text-xl font-semibold text-gray-900 flex items-center">
                <svg width="18" height="18" className="mr-2 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" style={{ width: '18px', height: '18px' }}>
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                </svg>
                Recently Saved
              </h3>
              {totalSaved > 3 && (
                <Link 
                  href="/dashboard/saved-properties"
                  className="text-sm text-blue-600 hover:text-blue-700 font-medium"
                >
                  View all
                </Link>
              )}
            </div>
            
            {recentSavedProperties.length > 0 ? (
              <div className="space-y-4">
                {recentSavedProperties.map((property) => (
                  <div key={property.id} className="flex items-center space-x-3 p-3 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors">
                    <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                      <svg className="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z" />
                      </svg>
                    </div>
                    <div className="flex-1 min-w-0">
                      <p className="text-sm font-medium text-gray-900 truncate">
                        {property.fields.Title || 'Untitled Property'}
                      </p>
                      <p className="text-xs text-gray-500">
                        {property.fields.Price ? `$${property.fields.Price.toLocaleString()}` : 'Price on request'}
                      </p>
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <div className="text-center py-8">
                <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <svg className="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                  </svg>
                </div>
                <p className="text-gray-500 text-sm mb-4">No saved properties yet</p>
                <Link 
                  href="/"
                  className="text-blue-600 hover:text-blue-700 text-sm font-medium"
                >
                  Start browsing
                </Link>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}